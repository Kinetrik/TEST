VoiceMessage {
  client: <ref *1> Client {
    _events: [Object: null prototype] {
      shardDisconnect: [Function (anonymous)],
      voiceStateUpdate: [Array],
      voiceJoin: [Function (anonymous)],
      messageCreate: [Function (anonymous)],
      speech: [AsyncFunction (anonymous)],
      ready: [Function (anonymous)]
    },
    _eventsCount: 6,
    _maxListeners: undefined,
    options: {
      intents: [IntentsBitField],
      closeTimeout: 5000,
      waitGuildTimeout: 15000,
      shardCount: 1,
      makeCache: [Function (anonymous)],
      partials: [],
      failIfNotExists: true,
      presence: [Object],
      sweepers: [Object],
      ws: [Object],
      rest: [Object],
      jsonTransformer: [Function: toSnakeCase],
      shards: [Array]
    },
    rest: REST {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      cdn: [CDN],
      requestManager: [RequestManager],
      [Symbol(kCapture)]: false
    },
    ws: WebSocketManager {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      gateway: 'wss://gateway.discord.gg/',
      totalShards: 1,
      shards: [Collection [Map]],
      status: 0,
      destroyed: false,
      reconnecting: false,
      [Symbol(kCapture)]: false
    },
    actions: ActionsManager {
      injectedUser: Symbol(djs.actions.injectedUser),
      injectedChannel: Symbol(djs.actions.injectedChannel),
      injectedMessage: Symbol(djs.actions.injectedMessage),
      client: [Circular *1],
      ApplicationCommandPermissionsUpdate: [ApplicationCommandPermissionsUpdateAction],
      AutoModerationActionExecution: [AutoModerationActionExecutionAction],
      AutoModerationRuleCreate: [AutoModerationRuleCreateAction],
      AutoModerationRuleDelete: [AutoModerationRuleDeleteAction],
      AutoModerationRuleUpdate: [AutoModerationRuleUpdateAction],
      ChannelCreate: [ChannelCreateAction],
      ChannelDelete: [ChannelDeleteAction],
      ChannelUpdate: [ChannelUpdateAction],
      GuildAuditLogEntryCreate: [GuildAuditLogEntryCreateAction],
      GuildBanAdd: [GuildBanAdd],
      GuildBanRemove: [GuildBanRemove],
      GuildChannelsPositionUpdate: [GuildChannelsPositionUpdate],
      GuildDelete: [GuildDeleteAction],
      GuildEmojiCreate: [GuildEmojiCreateAction],
      GuildEmojiDelete: [GuildEmojiDeleteAction],
      GuildEmojiUpdate: [GuildEmojiUpdateAction],
      GuildEmojisUpdate: [GuildEmojisUpdateAction],
      GuildIntegrationsUpdate: [GuildIntegrationsUpdate],
      GuildMemberRemove: [GuildMemberRemoveAction],
      GuildMemberUpdate: [GuildMemberUpdateAction],
      GuildRoleCreate: [GuildRoleCreate],
      GuildRoleDelete: [GuildRoleDeleteAction],
      GuildRoleUpdate: [GuildRoleUpdateAction],
      GuildRolesPositionUpdate: [GuildRolesPositionUpdate],
      GuildScheduledEventCreate: [GuildScheduledEventCreateAction],
      GuildScheduledEventDelete: [GuildScheduledEventDeleteAction],
      GuildScheduledEventUpdate: [GuildScheduledEventUpdateAction],
      GuildScheduledEventUserAdd: [GuildScheduledEventUserAddAction],
      GuildScheduledEventUserRemove: [GuildScheduledEventUserRemoveAction],
      GuildStickerCreate: [GuildStickerCreateAction],
      GuildStickerDelete: [GuildStickerDeleteAction],
      GuildStickerUpdate: [GuildStickerUpdateAction],
      GuildStickersUpdate: [GuildStickersUpdateAction],
      GuildUpdate: [GuildUpdateAction],
      InteractionCreate: [InteractionCreateAction],
      InviteCreate: [InviteCreateAction],
      InviteDelete: [InviteDeleteAction],
      MessageCreate: [MessageCreateAction],
      MessageDelete: [MessageDeleteAction],
      MessageDeleteBulk: [MessageDeleteBulkAction],
      MessageReactionAdd: [MessageReactionAdd],
      MessageReactionRemove: [MessageReactionRemove],
      MessageReactionRemoveAll: [MessageReactionRemoveAll],
      MessageReactionRemoveEmoji: [MessageReactionRemoveEmoji],
      MessageUpdate: [MessageUpdateAction],
      PresenceUpdate: [PresenceUpdateAction],
      StageInstanceCreate: [StageInstanceCreateAction],
      StageInstanceDelete: [StageInstanceDeleteAction],
      StageInstanceUpdate: [StageInstanceUpdateAction],
      ThreadCreate: [ThreadCreateAction],
      ThreadDelete: [ThreadDeleteAction],
      ThreadListSync: [ThreadListSyncAction],
      ThreadMemberUpdate: [ThreadMemberUpdateAction],
      ThreadMembersUpdate: [ThreadMembersUpdateAction],
      TypingStart: [TypingStart],
      UserUpdate: [UserUpdateAction],
      VoiceStateUpdate: [VoiceStateUpdate],
      WebhooksUpdate: [WebhooksUpdate]
    },
    voice: ClientVoiceManager { adapters: [Map] },
    shard: null,
    users: UserManager {},
    guilds: GuildManager {},
    channels: ChannelManager {},
    sweepers: Sweepers { options: [Object], intervals: [Object] },
    presence: ClientPresence {
      userId: null,
      guild: null,
      status: 'online',
      activities: [],
      clientStatus: null
    },
    user: ClientUser {
      id: '1090650424610148543',
      bot: true,
      system: false,
      flags: [UserFlagsBitField],
      username: 'Delamain',
      discriminator: '5743',
      avatar: 'cb98a224776d7aff6e8d50dec61559e8',
      banner: undefined,
      accentColor: undefined,
      verified: true,
      mfaEnabled: false
    },
    application: ClientApplication {
      id: '1090650424610148543',
      name: null,
      description: null,
      icon: null,
      tags: [],
      installParams: null,
      customInstallURL: null,
      flags: [ApplicationFlagsBitField],
      cover: null,
      rpcOrigins: [],
      botRequireCodeGrant: null,
      botPublic: null,
      roleConnectionsVerificationURL: null,
      owner: null,
      commands: [ApplicationCommandManager]
    },
    readyTimestamp: 1680188368338,
    [Symbol(kCapture)]: true
  },
  channel: <ref *2> VoiceChannel {
    type: 2,
    guild: Guild {
      id: '1090648312597712997',
      name: 'Delamain',
      icon: null,
      features: [],
      commands: [GuildApplicationCommandManager],
      members: [GuildMemberManager],
      channels: [GuildChannelManager],
      bans: [GuildBanManager],
      roles: [RoleManager],
      presences: PresenceManager {},
      voiceStates: [VoiceStateManager],
      stageInstances: [StageInstanceManager],
      invites: [GuildInviteManager],
      scheduledEvents: [GuildScheduledEventManager],
      autoModerationRules: [AutoModerationRuleManager],
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 0,
      vanityURLCode: null,
      nsfwLevel: 0,
      premiumSubscriptionCount: 0,
      discoverySplash: null,
      memberCount: 4,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: '1090648313449164813',
      premiumTier: 0,
      widgetEnabled: null,
      widgetChannelId: null,
      explicitContentFilter: 0,
      mfaLevel: 0,
      joinedTimestamp: 1680102543730,
      defaultMessageNotifications: 0,
      systemChannelFlags: [SystemChannelFlagsBitField],
      maximumMembers: 500000,
      maximumPresences: null,
      maxVideoChannelUsers: 25,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '1061421381859934330',
      emojis: [GuildEmojiManager],
      stickers: [GuildStickerManager]
    },
    guildId: '1090648312597712997',
    parentId: '1090648313449164812',
    permissionOverwrites: PermissionOverwriteManager { channel: [Circular *2] },
    messages: MessageManager { channel: [Circular *2] },
    nsfw: false,
    flags: ChannelFlagsBitField { bitfield: 0 },
    id: '1090648313449164815',
    name: 'Testowanie',
    rawPosition: 0,
    rtcRegion: null,
    bitrate: 64000,
    userLimit: 0,
    videoQualityMode: null,
    lastMessageId: null,
    rateLimitPerUser: 0
  },
  author: User {
    id: '695684470317252659',
    bot: false,
    system: false,
    flags: UserFlagsBitField { bitfield: 64 },
    username: 'Belzebub',
    discriminator: '2017',
    avatar: '6c3cea74a33b6e3625c6666cd1dec611',
    banner: undefined,
    accentColor: undefined
  },
  audioBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ... 372430 more bytes>,
  connection: <ref *3> VoiceConnection {
    _events: [Object: null prototype] { stateChange: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    debug: null,
    rejoinAttempts: 0,
    receiver: VoiceReceiver {
      voiceConnection: [Circular *3],
      ssrcMap: [SSRCMap],
      speaking: [SpeakingMap],
      subscriptions: Map(0) {},
      connectionData: [Object],
      onWsPacket: [Function: bound onWsPacket],
      onUdpMessage: [Function: bound onUdpMessage]
    },
    onNetworkingClose: [Function: bound onNetworkingClose],
    onNetworkingStateChange: [Function: bound onNetworkingStateChange],
    onNetworkingError: [Function: bound onNetworkingError],
    onNetworkingDebug: [Function: bound onNetworkingDebug],
    _state: { status: 'ready', adapter: [Object], networking: [Networking] },
    packets: { server: [Object], state: [Object] },
    joinConfig: {
      selfDeaf: false,
      selfMute: false,
      group: 'default',
      channelId: '1090648313449164815',
      guildId: '1090648312597712997',
      adapterCreator: [Function (anonymous)]
    },
    [Symbol(kCapture)]: false
  },
  duration: 1.94,
  content: 'dawaj obiekt',
  error: undefined
}